# Generated by Django 3.2.9 on 2022-03-19 21:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deadline', models.DateField(verbose_name='Event expire date')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Academic Event',
                'verbose_name_plural': 'Academic Events',
            },
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_year', models.CharField(max_length=20, unique=True)),
                ('year', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name': 'Academic Year',
                'verbose_name_plural': 'Academic Years',
            },
        ),
        migrations.CreateModel(
            name='Combination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('subject', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Combination',
                'verbose_name_plural': 'Combinations',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'District',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Item',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('O-Level', 'O-Level'), ('A-Level', 'A-Level')], max_length=45, unique=True)),
            ],
            options={
                'verbose_name': 'Level',
                'verbose_name_plural': 'Levels',
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Form One', 'Form One'), ('Form Two', 'Form Two'), ('Form Three', 'Form Three'), ('Form Four', 'Form Four'), ('Form Five', 'Form Five'), ('Form Six', 'Form Six')], max_length=20, unique=True)),
                ('number', models.IntegerField(editable=False, unique=True)),
            ],
            options={
                'verbose_name': 'Rank',
                'verbose_name_plural': 'Ranks',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_registered', models.BooleanField(default=False, verbose_name='Registration Status')),
                ('is_active', models.BooleanField(default=False)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.academicyear')),
                ('combination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SRS.combination')),
            ],
            options={
                'verbose_name': 'Registration',
                'verbose_name_plural': 'Registration',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Former School')),
            ],
            options={
                'verbose_name': 'Schools',
                'verbose_name_plural': 'School',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('middle_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '0.....'. Up to 10 digits allowed.", regex='[0][6-9][0-9]{8}')])),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('title', models.CharField(choices=[('staff', 'staff'), ('teacher', 'teacher'), ('ICT Officer', 'ICT Officer'), ('System Administrator', 'System Administrator')], default='staff', max_length=40)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YearResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.CharField(editable=False, max_length=12)),
                ('point', models.IntegerField(blank=True, editable=False, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('is_sent', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.academicevent')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.registration')),
            ],
            options={
                'verbose_name': 'Academic Year Result',
                'verbose_name_plural': 'Academic Year Results',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('code', models.CharField(choices=[('EC', 'Direct Cost'), ('OC', 'Development Cost')], default='EC', max_length=45)),
                ('account', models.CharField(max_length=45, unique=True, verbose_name='Payment account')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Type',
                'verbose_name_plural': 'Payment Type',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('code', models.CharField(max_length=15, unique=True)),
                ('is_core', models.BooleanField(default=True, verbose_name='Core Subject')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission', models.CharField(max_length=100, unique=True)),
                ('entry_number', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('parent_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '0.....'. Up to 10 digits allowed.", regex='[0][6-9][0-9]{8}')])),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True)),
                ('entry_rank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='SRS.rank')),
                ('registerer', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('residency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SRS.district')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='SRS.school')),
            ],
            options={
                'verbose_name': 'Student Entry',
                'verbose_name_plural': 'Student Entry',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('NOT PAID', 'NOT PAID'), ('PARTIAL PAID', 'PARTIAL PAID'), ('FULL PAID', 'COMPLETE')], default='NOT PAID', max_length=30, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Status',
            },
        ),
        migrations.AddField(
            model_name='school',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='school',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.district'),
        ),
        migrations.AddField(
            model_name='registration',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registration',
            name='rank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.rank'),
        ),
        migrations.AddField(
            model_name='registration',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.status'),
        ),
        migrations.AddField(
            model_name='registration',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.student'),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'region',
                'verbose_name_plural': 'region',
            },
        ),
        migrations.AddField(
            model_name='rank',
            name='created_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rank',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.level'),
        ),
        migrations.CreateModel(
            name='PaymentStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('minimum', models.DecimalField(decimal_places=2, default=0.0, max_digits=14, verbose_name='minimum amount')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.level')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.type')),
            ],
            options={
                'verbose_name': 'Payment Structure',
                'verbose_name_plural': 'Payment Structure',
            },
        ),
        migrations.CreateModel(
            name='PaymentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Amount to be Paid')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.item')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.level')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.type')),
            ],
            options={
                'verbose_name': 'Payment Item',
                'verbose_name_plural': 'Payment Item',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=14)),
                ('due', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=14, verbose_name='remain amount')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.registration')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.paymentstructure')),
            ],
            options={
                'verbose_name': 'Registration Payment',
                'verbose_name_plural': 'Registration Payment',
            },
        ),
        migrations.AddField(
            model_name='level',
            name='created_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='item',
            name='created_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.AddField(
            model_name='district',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.region'),
        ),
        migrations.CreateModel(
            name='Coordinator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.rank')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Class Coordinator',
                'verbose_name_plural': 'Class Coordinator',
            },
        ),
        migrations.CreateModel(
            name='CombinationSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('combination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.combination')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.subject')),
            ],
            options={
                'verbose_name': 'Combination Subject',
                'verbose_name_plural': 'Combination Subjects',
                'unique_together': {('subject', 'combination')},
            },
        ),
        migrations.AddField(
            model_name='combination',
            name='created_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='combination',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.level'),
        ),
        migrations.AddField(
            model_name='academicyear',
            name='created_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='academicevent',
            name='created_by',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='academicevent',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.event'),
        ),
        migrations.AddField(
            model_name='academicevent',
            name='rank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.rank'),
        ),
        migrations.AddField(
            model_name='academicevent',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.academicyear'),
        ),
        migrations.CreateModel(
            name='WorkLoad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.rank')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.subject')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.academicyear')),
            ],
            options={
                'verbose_name': 'Academic WorkLoad',
                'verbose_name_plural': 'Academic WorkLoad',
                'unique_together': {('staff', 'subject', 'rank', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.DecimalField(decimal_places=1, max_digits=5)),
                ('grade', models.CharField(max_length=1)),
                ('remark', models.CharField(max_length=30)),
                ('point', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.academicevent')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.registration')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SRS.combinationsubject')),
            ],
            options={
                'verbose_name': 'Academic Result',
                'verbose_name_plural': 'Academic Results',
                'unique_together': {('registration', 'event', 'subject')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='rank',
            unique_together={('name', 'level')},
        ),
        migrations.AlterUniqueTogether(
            name='academicyear',
            unique_together={('financial_year', 'year')},
        ),
        migrations.AlterUniqueTogether(
            name='academicevent',
            unique_together={('event', 'rank', 'year')},
        ),
    ]
